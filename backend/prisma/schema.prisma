generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Ngo {
  id                          Int      @id @map("_id")
  name                        String
  description                 String?
  is_formalized               Boolean
  start_year                  Int
  contact_phone               String?
  instagram_link              String?
  x_link                      String?
  facebook_link               String?
  pix_qr_code_link            String?
  gallery_images_url          String[] // URLs das imagens da galeria
  skills                      Json?    // Habilidades (armazenadas como JSON)
  causes                      Json?    // Causas (armazenadas como JSON)
  sustainable_development_goals Json?  // Objetivos de desenvolvimento sustentável (armazenados como JSON)
  files                       FileMetadata[] // Arquivos associados à ONG
  users                       User[]  // Relacionamento com usuários
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt

  @@map("ngos") // Nome da coleção no MongoDB
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  ngoId     Int
  ngo       Ngo      @relation(fields: [ngoId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users") // Nome da coleção no MongoDB
}

model FileMetadata {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  nome      String
  tipo      String   // Tipo MIME do arquivo (ex: 'application/pdf')
  tamanho   Int      // Tamanho do arquivo em bytes
  ngoId     Int      // ID da ONG associada
  ngo       Ngo      @relation(fields: [ngoId], references: [id])
  gridFSId  String   // ID do arquivo no GridFS
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("file_metadata") // Nome da coleção no MongoDB
}